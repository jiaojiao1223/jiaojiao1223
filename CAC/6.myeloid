Myeloid <- readRDS("/home/majiao/Myeloid/myeloid")


DimPlot(Myeloid,reduction = "umap",label = TRUE,repel = TRUE)
DimPlot(Myeloid,reduction = "umap",group.by = "status")



gene <- c("CD68","CD14",
          "ISG15","CXCL10",
          "S100A8","S100A9",
          "VEGFA","EREG",
          "APOE","C1QB",
          "MRC1",
          "HSPA1A","HSPA1B",
          "LILRA4","GZMB",
          "CLEC9A",
          "CD1C","CLEC10A",
          "CCR7","LAMP3",
          "TPSAB1","CPA3")

Myeloid <- RenameIdents(Myeloid, `0` = "APOE_Macro", `1` = "Mast Cells", `2` = "S100A8_Macro", 
                        `3` = "S100A8_Macro", `4` = "APOE_Macro", `5` = "CD1C_cDC2",
                        `6` = "VEGFA_Macro", `7` = "MRC1_Macro", `8` = "S100A8_Macro", `9` = "CLEC9A_cDC1", 
                        `10` = "Undifined", `11` = "HSPA1A_Macro", `12` = "CCR7_cDC3", `13` = "APOE_Macro", 
                        `14` = "ISG15_Macro",`15` = "Undifined", `16` = "Undifined",
                        `17` = "LILRA4_pDC",`18` = "Mast Cells", `19` = "Mast Cells")
Myeloid[['myeloid_type']] <- Myeloid@active.ident




VEGFA <- subset(Myeloid,subset =myeloid_type =="VEGFA_Macro")

VEGFA <- NormalizeData(VEGFA)
VEGFA <- FindVariableFeatures(VEGFA,selection.method = "vst",nfeatures = 2000)
VEGFA <- ScaleData(VEGFA,features = rownames(VEGFA))
VEGFA <- RunPCA(VEGFA,features = VariableFeatures(object = VEGFA))
VEGFA <- VEGFA %>% RunHarmony("GEO", plot_convergence = TRUE)
VEGFA <- FindNeighbors(VEGFA,reduction = "harmony",dims = 1:15)
VEGFA <- FindClusters(VEGFA,resolution = 0.5)
VEGFA <- RunUMAP(VEGFA,reduction = "harmony",dims = 1:15)
DefaultAssay(VEGFA) <- "RNA"

DimPlot(VEGFA,reduction = "umap",group.by = "status")



umap <- Myeloid@reductions$umap@cell.embeddings %>%
  as.data.frame() %>%
  cbind(cell_type = Myeloid@meta.data$myeloid_type)

umap$barcodes <- rownames(umap)
umap <- umap[,c(4,3)]


VEGFA_markers <- FindMarkers(Myeloid,ident.1 = "VEGFA_Macro",min.pct = 0.25)

IGS15_markers <- FindMarkers(Myeloid,ident.1 = "ISG15_Macro",min.pct = 0.25)


library(dplyr)
VEGFA_markers<- arrange(VEGFA_markers,-avg_log2FC)

IGS15_markers<- arrange(IGS15_markers,-avg_log2FC)


write.table(VEGFA_markers,file = "VEGFA_markers.txt",sep = "\t",quote = FALSE,row.names = TRUE)




GSVA <- read.table("/home/majiao/Myeloid/IBD_CRC_GSVA.txt",sep = "\t",header = TRUE,
                 check.names = FALSE)



Myeloid_celltype <- subset(Myeloid@meta.data,select = c("myeloid_type"))
write.table(Myeloid_celltype,file = "Myeloid_celltype.txt",sep = "\t",quote = FALSE,row.names = TRUE)

#########TNF
IL17 <- c(6364,1051,1440,2919,3627,2920,2921,6374,2353,3320,
        3326,132014,3553,3569,3725,3727,5597,4790,4792,5743,
         6279,6280,7124,7128,3576,6354)
IL17 <- data.frame(IL17)
IL17$entrezID <-IL17$IL17
IL17 <- merge(IL17,rt,by="entrezID")
IL17 <- IL17$genes
IL17 <- data.frame(IL17)

IL17$gene_short_name <- IL17$IL17

IL17 <- merge(Track_genes,IL17,by="gene_short_name")
IL17 <- arrange(IL17,-morans_I)


#########TNF
TNF <- c(602,330,6364,6352,1051,8837,9586,1435,2919,3627,2920,
        2921,6374,1906,2353,3383,3553,3569,3659,3725,3726,5606,
        1326,197259,4323,4790,4792,5743,9021,7124,7128,7132,7133,7185)
TNF <- data.frame(TNF)
TNF$entrezID <-TNF$TNF
TNF <- merge(TNF,rt,by="entrezID")
TNF <- TNF$genes
TNF <- data.frame(TNF)

TNF$gene_short_name <- TNF$TNF

TNF <- merge(Track_genes,TNF,by="gene_short_name")
TNF <- arrange(TNF,-morans_I)


########NF_KB
NF_KB <- c(472,596,597,330,6351,
          9560,8837,2919,2920,2921,
          1540,23586,4616,3383,3553,
          3554,23643,10892,4615,4790,
          4791,4792,5579,5743,5971,
          7099,7124,7128,7132,10673,
          8740,7185,7706,3576,388372)

NF_KB <- data.frame(NF_KB)
NF_KB$entrezID <-NF_KB$NF_KB
NF_KB <- merge(NF_KB,rt,by="entrezID")
NF_KB <- NF_KB$genes
NF_KB <- data.frame(NF_KB)

NF_KB$gene_short_name <- NF_KB$NF_KB

NF_KB <- merge(Track_genes,NF_KB,by="gene_short_name")
NF_KB <- arrange(NF_KB,-morans_I)

#########HIF1A

HIF1A <- c(226,596,1026,1906,1977,
           2026,2321,2597,3091,3099,
           3162,3460,3569,3570,3939,
           4790,5209,5214,5579,6513,
           6774,7076,7099,7422,6921,6923)
HIF1A <- data.frame(HIF1A)
HIF1A$entrezID <- HIF1A$HIF1A
HIF1A <- merge(HIF1A,rt,by="entrezID")
HIF1A <- HIF1A$genes
HIF1A <- data.frame(HIF1A)

HIF1A$gene_short_name <- HIF1A$HIF1A
HIF1A <- merge(Track_genes,HIF1A,by="gene_short_name")

HIF1A <- arrange(HIF1A,-morans_I)
#########

VEGFA_matrix <- VEGFA@assays$RNA@counts
VEGFA_matrix <- data.frame(VEGFA_matrix)

library(GSVA)
library(GSVAdata)
library(GSEABase)
library(limma)
library(tidyverse)

###########GSVA

pathway <- IL17$gene_short_name


geneSets <- list(pathway)
names(geneSets) <- c("IL17")

IL17 <- gsva(as.matrix(VEGFA_matrix),geneSets,method='gsva',
             kcdf='Gaussian',abs.ranking=TRUE)
IL17 <- t(IL17)
IL17 <- data.frame(IL17)

IL17$CB <- rownames(IL17)





umap <- VEGFA@reductions$umap@cell.embeddings %>%
  as.data.frame() %>%
  cbind(status=VEGFA$status)
umap$CB <- rownames(umap)

umap <- merge(umap,NF_KB,by="CB")
umap <- merge(umap,HIF1A,by="CB")
umap <- merge(umap,TNF,by="CB")
umap <- merge(umap,IL17,by="CB")


my_compares <- list(c("Colitis-Associated Cancer","Ulcerative Colitis"),
                   c("Ulcerative Colitis","Healthy"),
                   c("Colitis-Associated Cancer","Healthy")) 

umap$status <- factor(umap$status,
                      levels = c("Healthy",
                                 "Ulcerative Colitis",
                                 "Colitis-Associated Cancer"))
ggboxplot(umap, x="status", y="IL17",
          color="status", palette = c("#1E94A0","#FEC0C1","#DC2543"),
          add = "jitter") +
  stat_compare_means(comparisons = my_compares)



library(monocle3, lib.loc = "/home/majiao/ENTER/envs/monocle3/lib/R/library")
library(Seurat)
library(leidenbase)
library(ggplot2)
library(tidyverse)
library(patchwork)
library(magrittr)
data <- GetAssayData(Tex, assay = 'RNA', slot = 'counts')
cell_metadata <- Tex@meta.data
gene_annotation <- data.frame(gene_short_name = rownames(data))
rownames(gene_annotation) <- rownames(data)
cds <- new_cell_data_set(data,
                         cell_metadata = cell_metadata,
                         gene_metadata = gene_annotation)

cds <- preprocess_cds(cds, num_dim = 50)

cds <- reduce_dimension(cds,preprocess_method = "PCA", reduction_method = "UMAP") #preprocess_method默认是PCA
cds <- cluster_cells(cds, reduction_method = "UMAP")

cds.embed <- cds@int_colData$reducedDims$UMAP
int.embed <- Embeddings(Tex, reduction = "umap")
int.embed <- int.embed[rownames(cds.embed),]
cds@int_colData$reducedDims$UMAP <- int.embed

cds <- learn_graph(cds)


Clustercolor <-c("#DC2543","#1E94A0","#FEC0C1")


p1 = plot_cells(cds, color_cells_by = "status", label_cell_groups = F, label_groups_by_cluster=FALSE,
               label_leaves=FALSE, label_branch_points=FALSE,cell_size = 2,
               trajectory_graph_segment_size = 1)+
  scale_colour_manual(values = Clustercolor)+
  theme_bw()+
  labs(title = "", fill = "Celltype")+
  xlab("UMAP_1")+
  ylab("UAMP_2")+
  theme(legend.title=element_blank())+
  theme(axis.text=element_text(family = "Arial", size=13, face = "bold"), # 坐标轴刻度
        axis.title=element_text(family = "Arial", size=13, face="bold"), # 坐标轴标题
        panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"), # 调整坐标轴边框的粗细
        panel.background = element_blank(), #去除背景
        panel.grid=element_blank(), #去除网格线
        legend.text = element_text(size = 12),
        axis.title.x = element_text(margin = margin(t = 0.4, unit = "cm")),
        axis.title.y = element_text(margin = margin(t = 0, r = 0.4, b = 0, l = 0, unit = "cm")))


ggsave("plot.png",p1,width = 10.5, height = 6)




cds <- order_cells(cds)

p2 = plot_cells(cds, color_cells_by = "pseudotime", label_cell_groups = FALSE, 
               label_leaves = FALSE,  label_branch_points = FALSE,cell_size = 2,
               trajectory_graph_segment_size = 1)+
  xlab("UMAP_1")+
  ylab("UAMP_2")+
  theme(legend.title=element_blank())+
  theme(axis.text=element_text(family = "Arial", size=13, face = "bold"), # 坐标轴刻度
        axis.title=element_text(family = "Arial", size=13, face="bold"), # 坐标轴标题
        panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"), # 调整坐标轴边框的粗细
        panel.background = element_blank(), #去除背景
        panel.grid=element_blank(), #去除网格线
        legend.text = element_text(size = 12),
        axis.title.x = element_text(margin = margin(t = 0.4, unit = "cm")),
        axis.title.y = element_text(margin = margin(t = 0, r = 0.4, b = 0, l = 0, unit = "cm")))        


ggsave("plot.png",p2,width = 9, height = 6)




#计算基因按照轨迹的变化
Track_genes <- graph_test(cds, neighbor_graph="principal_graph", cores=6)
Track_genes <- Track_genes[,c(5,2,3,4,1,6)] %>% filter(q_value < 1e-20)

trackgene$samples<-
  ifelse(grepl("ATP",trackgene$gene_short_name),
         "Yes","No")
trackgene <- subset(trackgene, subset= samples=='No')



#挑选top10画图展示
Track_genes_sig <- Track_genes %>% top_n(n=10,morans_I) %>%
  pull(gene_short_name) %>% as.character()


DYGG <- Track_genes[Track_genes_sig,]
#基因表达趋势图
p1 <- plot_genes_in_pseudotime(cds[c('VEGFA','HIF1A',"EREG"),], color_cells_by="status", 
                         min_expr=0.5, ncol = 1,cell_size = 2)+
  scale_colour_manual(values = Clustercolor)

ggsave("plot.png",p1,width = 6, height = 9)

plot_genes_by_group(cds,gene,group_cells_by = "status")+
  ggtitle("Exhausted genes")

  
###chemical carinogenesis-reactive oxygen species

gene <- c("PDCD1","CTLA4","HAVCR2","LAG3","TIGIT","CXCL13")



ggsave("plot.png",p1,width = 6.5, height = 10.5)
#FeaturePlot图
plot_cells(cds, genes=Track_genes_sig, show_trajectory_graph=FALSE,
           label_cell_groups=FALSE,  label_leaves=FALSE)
#在这里运用到文章的话，应该可以这样用，你可以用这些变化top基因来讲一些东西，或者你可以show你自己fouce on的gene


##寻找共表达模块



genelist <- pull(Track_genes,gene_short_name) %>% as.character()
gene_module <- find_gene_modules(cds[genelist,], resolution=1e-2, cores = 10)
cell_group <- tibble::tibble(cell=row.names(colData(cds)), 
                             cell_group=colData(cds)$status)

agg_mat <- aggregate_gene_expression(cds, gene_module, cell_group)
row.names(agg_mat) <- stringr::str_c("Module ", row.names(agg_mat))

pheatmap::pheatmap(agg_mat, scale="column", clustering_method="ward.D2")


##############VEGFA_module
gene_module1 <- subset(gene_module,subset=module=="1"|module=="6"|module=="7"|module=="8"|module=="9"|module=="17"|module=="18")
############Tex_module
gene_module1 <- subset(gene_module,subset=module=="1"|module=="2"|module=="4"|module=="6"|module=="9")





genes <- gene_module1$id


dygg <- Track_genes[Track_genes_sig,]

library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(ggplot2)

mm7[which(mm7$`Fold-Change`>0),'up_down']<-'up'
mm7[which(mm7$`Fold-Change`<0),'up_down']<-'down'
head(mm7)
mm7_up <- subset(mm7,subset=mm7$up_down=="up")

genes <- rownames(VEGFA)

genes <- Track_genes$gene_short_name
genes <- mm7$Gene_symbol

entrezIDs <- mget(genes,org.Hs.egSYMBOL2EG,ifnotfound = NA)
entrezIDs <- as.character(entrezIDs)
out <- cbind(genes,entrezID = entrezIDs)
write.table(out,file = "id.txt",sep = "\t",quote = FALSE,row.names = FALSE)
rt <- read.table("/home/majiao/validation/id.txt",sep = "\t",header = TRUE,
                 check.names = FALSE)
rt <- rt[is.na(rt[,"entrezID"])==FALSE]
gene <- rt$entrezID

#GO富集分析
GG <- enrichGO(gene = gene,
               OrgDb = org.Hs.eg.db,
               pvalueCutoff = 0.05,
               qvalueCutoff = 0.05,
               ont = "all",
               readable = TRUE)


#柱状图
barplot(GG,drop = TRUE,showCategory = 10,split = "ONTOLOGY")+
  facet_grid(ONTOLOGY~.,scale = 'free')

#气泡图
dotplot(GG,showCategory = 5,split = "ONTOLOGY")+
  facet_grid(ONTOLOGY~.,scale = 'free')

ego_ALL <- enrichGO(gene = gene,
                    OrgDb = org.Hs.eg.db,
                    ont = "ALL",
                    pAdjustMethod = "BH",
                    pvalueCutoff = 0.05,
                    qvalueCutoff = 0.05)

ego_ALL <- data.frame(ego_ALL)

ego_CC <- enrichGO(gene = gene,
                   OrgDb = org.Hs.eg.db,
                   ont = "CC",
                   pAdjustMethod = "BH",
                   pvalueCutoff = 0.05,
                   qvalueCutoff = 0.05)

ego_MF <- enrichGO(gene = gene,
                   OrgDb = org.Hs.eg.db,
                   ont = "MF",
                   pAdjustMethod = "BH",
                   pvalueCutoff = 0.05,
                   qvalueCutoff = 0.05)
ego_BP <- enrichGO(gene = gene,
                   OrgDb = org.Hs.eg.db,
                   ont = "BP",
                   pAdjustMethod = "BH",
                   pvalueCutoff = 0.05,
                   qvalueCutoff = 0.05)

p_BP <- barplot(ego_BP,showCategory = 10)+ggtitle("barplot for biological process")
p_CC <- barplot(ego_CC,showCategory = 10)+ggtitle("barplot for cellular component")
p_MF <- barplot(ego_MF,showCategory = 10)+ggtitle("barplot for molecular function")

plotc <- p_BP/p_CC/p_MF

plotd <- p_BP1/p_cc1/p_MF




###KEGG富集分析
KK <- enrichKEGG(gene = gene,
                 organism = "hsa",
                 pvalueCutoff = 0.05,
                 qvalueCutoff = 0.05)


#柱状图
p1 <- barplot(KK,drop = TRUE,showCategory = 20)+
  theme(legend.title=element_blank())+
  theme(axis.text=element_text(family = "Arial", size=13, face = "bold"), # 坐标轴刻度
        axis.title=element_text(family = "Arial", size=13, face="bold"), # 坐标轴标题
        panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"), # 调整坐标轴边框的粗细
        panel.background = element_blank(), #去除背景
        panel.grid=element_blank(), #去除网格线
        axis.title.x = element_text(margin = margin(t = 0.4, unit = "cm")),
        axis.title.y = element_text(margin = margin(t = 0, r = 0.4, b = 0, l = 0, unit = "cm")))

#气泡图
p1 <- dotplot(KK,showCategory = 20)+
  theme(legend.title=element_blank())+
  theme(axis.text=element_text(family = "Arial", size=13, face = "bold"), # 坐标轴刻度
        axis.title=element_text(family = "Arial", size=13, face="bold"), # 坐标轴标题
        panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"), # 调整坐标轴边框的粗细
        panel.background = element_blank(), #去除背景
        panel.grid=element_blank(), #去除网格线
        axis.title.x = element_text(margin = margin(t = 0.4, unit = "cm")),
        axis.title.y = element_text(margin = margin(t = 0, r = 0.4, b = 0, l = 0, unit = "cm")))


ggsave("plot.png",p1,width = 12, height = 12)



DYGG <- subset(KK@result,subset=Description=="HIF-1 signaling pathway")
DYGG <- DYGG$geneID
DYGG <- subset(rt,subset=entrezID=="226"|entrezID=="596"|entrezID=="1026"|entrezID=="1906"
               |entrezID=="1977"|entrezID=="2026"|entrezID=="2321"|entrezID=="2597"
               |entrezID=="3091"|entrezID=="3099"|entrezID=="3162"|entrezID=="3460"
               |entrezID=="3569"|entrezID=="3570"|entrezID=="3939"|entrezID=="4790"
               |entrezID=="5209"|entrezID=="5214"|entrezID=="5579"|entrezID=="6513"
               |entrezID=="6774"|entrezID=="7076"|entrezID=="7099"|entrezID=="7422"
               |entrezID=="6921"|entrezID=="6923")
dygg <- DYGG$genes
DotPlot(Myeloid,features = dygg)

















